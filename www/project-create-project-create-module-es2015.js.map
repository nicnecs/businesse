{"version":3,"sources":["./src/app/project-create/project-create.page.html","./src/app/project-create/project-create-routing.module.ts","./src/app/project-create/project-create.module.ts","./src/app/project-create/project-create.page.scss","./src/app/project-create/project-create.page.ts","./src/app/providers/project-data.ts"],"names":[],"mappings":"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","file":"project-create-project-create-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n  <form #createProjectform=\\\"ngForm\\\" novalidate>\\n  <ion-list lines>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Projekttitel*</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.title\\\" name=\\\"title\\\" type=\\\"text\\\" #title=\\\"ngModel\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-text color=\\\"danger\\\">\\n      <p [hidden]=\\\"title.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n        Title is required\\n      </p>\\n    </ion-text>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Betrieb*</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.company\\\" name=\\\"company\\\" #company=\\\"ngModel\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n    <ion-text color=\\\"danger\\\">\\n\\n    </ion-text>\\n    <p [hidden]=\\\"company.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n      Company is required\\n    </p>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Projektbeschreibung*</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.description\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-text color=\\\"danger\\\">\\n      <p [hidden]=\\\"description.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n        Description is required\\n      </p>\\n    </ion-text>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Projektstart*</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.project_start\\\" name=\\\"project-start\\\" #project_start=\\\"ngModel\\\" type=\\\"date\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-text color=\\\"danger\\\">\\n      <p [hidden]=\\\"project_start.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n        Project start is required\\n      </p>\\n    </ion-text>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Voraussichtliches Projektende*</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.project_end\\\" name=\\\"project-end\\\" #project_end=\\\"ngModel\\\" type=\\\"date\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-text color=\\\"danger\\\">\\n      <p [hidden]=\\\"project_end.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n        Description is required\\n      </p>\\n    </ion-text>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Anmeldefrist*</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.registration_period\\\" name=\\\"registration-period\\\" #registration_period=\\\"ngModel\\\" type=\\\"date\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-text color=\\\"danger\\\">\\n      <p [hidden]=\\\"registration_period.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n        Registration period is required\\n      </p>\\n    </ion-text>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Adresse*</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.address\\\" name=\\\"address\\\" #adress=\\\"ngModel\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-text color=\\\"danger\\\">\\n      <p [hidden]=\\\"adress.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n        Adress period is required\\n      </p>\\n    </ion-text>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Kommentar zur Adresse</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.address_comment\\\" name=\\\"address-comment\\\" #address_comment=\\\"ngModel\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Entlohnung</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.payment\\\" name=\\\"payment\\\" type=\\\"number\\\" #payment=\\\"ngModel\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Anzahl der gesuchten Auftragnehmer</ion-label>\\n      <ion-input [(ngModel)]=\\\"createProject.number_participants\\\" name=\\\"number-participants\\\" #number_participants=\\\"ngModel\\\" type=\\\"number\\\"></ion-input>\\n    </ion-item>\\n  </ion-list>\\n\\n  <div class=\\\"ion-padding\\\">\\n    <ion-button (click)=\\\"onCreateProject(createProjectform)\\\" type=\\\"submit\\\" expand=\\\"block\\\">Create</ion-button>\\n  </div>\\n  </form>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button href=\\\"#\\\" color=\\\"dark\\\">\\n            <ion-icon name=\\\"help\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button href=\\\"#\\\" color=\\\"dark\\\">\\n            <ion-icon name=\\\"settings\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button href=\\\"#\\\" color=\\\"dark\\\">\\n            <ion-icon name=\\\"wallet\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProjectCreatePage } from './project-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectCreatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProjectCreatePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectCreatePageRoutingModule } from './project-create-routing.module';\n\nimport { ProjectCreatePage } from './project-create.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProjectCreatePageRoutingModule\n  ],\n  declarations: [ProjectCreatePage]\n})\nexport class ProjectCreatePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QtY3JlYXRlL3Byb2plY3QtY3JlYXRlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { CreateProjectOptions } from \"../interfaces/create-project-options\";\nimport {Router} from \"@angular/router\";\nimport {ProjectData} from \"../providers/project-data\";\nimport {NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-project-create',\n  templateUrl: './project-create.page.html',\n  styleUrls: ['./project-create.page.scss'],\n})\nexport class ProjectCreatePage {\n  createProject: CreateProjectOptions = {\n    title: '',\n    company: '',\n    description: '',\n    project_start: null,\n    project_end: null,\n    registration_period: null,\n    address: '',\n    address_comment: '',\n    payment: null,\n    number_participants: null\n  };\n  submitted = false;\n\n  constructor(\n      public router: Router,\n      public projectData: ProjectData,\n  ) { }\n\n  onCreateProject(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n      this.projectData.createProject(this.createProject.title);\n      /**\n       * todo navigateByURL\n       */\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProjectData {\r\n    IS_CREATED = 'isCreated';\r\n\r\n    constructor(\r\n        public storage: Storage\r\n    ) { }\r\n\r\n    createProject(title: string): Promise<any> {\r\n        return this.storage.set(this.IS_CREATED, true).then(() => {\r\n            this.setTitle(title);\r\n            return window.dispatchEvent(new CustomEvent('project:create'));\r\n        });\r\n    }\r\n\r\n    setTitle(title: string): Promise<any> {\r\n        return this.storage.set('username', title);\r\n    }\r\n\r\n    getTitle(): Promise<string> {\r\n        return this.storage.get('title').then((value) => {\r\n            return value;\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}